app:
  version: ^project.version^
  name: ^project.name^
  
server:
  port: 8040
  contextPath: /ipfs-store

logging:
  level:
    net.consensys: ${LOG_LEVEL:TRACE}

ipfs-store:
  storage:
    type: IPFS
    host: ${IPFS_HOST:localhost}
    port: ${IPFS_PORT:5001}
    additional:
      timeout: 5000
      thread_pool: 10
      multiaddress: ${IPFS_MULTIADDRESS:}
    
  index:
    type: ELASTICSEARCH
    host: ${ELASTIC_HOST:localhost}
    port: ${ELASTIC_PORT:9300}
    additional:
      clusterName: ${ELASTIC_CLUSTERNAME:docker-cluster}
      indexNullValue: true
      
  pinning:
    strategies:
      - 
        id: ipfs_node
        type: native
        host: ${IPFS_HOST:localhost}
        port: ${IPFS_PORT:5001}
        additional:
          multiaddress: ${IPFS_MULTIADDRESS:}
      - 
        id: ipfs_cluster
        type: ipfs_cluster
        enable: ${IPFS_CLUSTER_ENABLE:false}
        host: ${IPFS_CLUSTER_HOST:localhost}
        port: ${IPFS_CLUSTER_PORT:9094}
  
  security:
    cors:
      origins: "*"
      methods: "GET,POST"
      headers: "Origin,Content-Type,Accept"
      credentials: "false"
       
  healthcheck:
    pollInterval: 10000

  api-spec:
    query:
      fetch: /query/fetch/{hash}
      search: /query/search
    config:
      index: /config/index/{index}
    persistence:
      raw:
        store: /raw/store
        index: /raw/index
        store_index: /raw/store_index
      json:
        store: /json/store
        index: /json/index
        store_index: /json/store_index